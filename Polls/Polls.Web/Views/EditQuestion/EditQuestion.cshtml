@using Polls.Domain.Models
@model Polls.Domain.Models.Question

@{
    ViewBag.Title = "EditQuestion";
}

<h2>EditQuestion</h2>

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Question</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.QuestionText)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.QuestionText)
            @Html.ValidationMessageFor(model => model.QuestionText)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Published)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Published)
            @Html.ValidationMessageFor(model => model.Published)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Alternatives[0].AlternativeText)
        </div>
        @{int alternativecount=Model.Alternatives.Count;
            for (int i = 0; i <= alternativecount; i++)
            {
                if (i == alternativecount)
                {
                    Model.Alternatives.Add(new Alternative());
                }
                <div>
                    @Html.EditorFor(m => m.Alternatives[i].AlternativeText)
                    @if (i == alternativecount)
                    {
                        <input type="submit" value="Add Alternative" name="btnSubmit" />
                    }
                </div>
            }

        }
        
        <p>
            <input type="submit" value="Save" name="btnSubmit" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Edit")|@Html.ActionLink("Delete question", "Delete", new { id = Model.Id })|@Html.ActionLink("Reset votes", "Reset", new { id = Model.Id })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
